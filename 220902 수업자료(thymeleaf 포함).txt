ThymeLeaf

0. 기본 특징
	SSR(Server Side Rendering)언어 중 SpringBoot에서 권장하는 언어
	내추럴 템플릿: 기본 html문서를 훼손하지 않고 html속성, 컨텐츠를 동적으로 변경
	th:속성 적용범위(시작태그~종료태그)
			재정의(html 템플릿 문서에서 존재하는 속성은 덮어쓰기, 존재하지 않는 속성은 추가)

1. 변수선언
	th:with = "변수명=표현식"
	
2. 조건문
	case1)
	th:if
	th:unless
	
	case2)
	th:switch, th:case
	
	case3)
	${표현식} ? {true}
	${표현식} ? {true} : {false}
	${표현식} ?: 기본값
	
3. 반복문
	1)요소 반복
	th:each="ele, eleStat : ${collection|array}"
	2)지정횟수 반복
	th:each="count : ${#numbers.sequence(from, to, step)}"
	th:each="count : ${#numbers.sequence(1, 10)}"
	
4. 타임리프 유일한 자체 태그
	용도: html 태그 생성없이 그루핑
	<th:block></th:block>
	
5. url링크
	@{/product/{pid}/{count}(pid="컴퓨터", count="10")}
	=>	/product/컴퓨터/10
	
5-1. url링크를 사용해 동적으로 만든 쿼리스트링
	@{/product/{pid}/{count}(pid="컴퓨터", count="10", price="10000")}
	=>	/product/컴퓨터/10?price="10000"
	@{/product/{pid}/{count}(pid="컴퓨터", count="10", price="10000", desc="조립")}
	=>	/product/컴퓨터/10?price="10000"&desc="조립"
	
6. 객체 멤버 접근
	${person.name}
	${person['name']}	<= 객체 멤버에 동적으로 접근시 사용
	${person.getName()}
	
7. 문자열 템플릿(동적인 문자열을 만들 때 사용)
	|hello ${변수표현식}|
	
8. html의 form태그와 연동하여 편리한 기능을 제공
	-th:object => controller의 form객체 (form객체에 setter메소드가 있어야 한다)
	-th:field => <input>엘리먼트에 id, name, value 속성이 자동 추가
	
	#fields => 검증오류내용을 담고있는 객체
	<div th:if="${#fields.hasGlobalErrors()}">
		<p class="errmsg" th:each="err:${#fields.globalErrors()}" th:text="${err}"></p>
	</div>
	-th:errors => <input>엘리먼트의 값이 오류가 있으면 오류메세지 표시
	-th:errorclass => 오류가 있으면 클래스명 변경(스타일 적용)
	
9. 표현식
${}: 변수 표현식
${{}}: 포매팅 적용(이중 중괄호 사용)
*{}: 선택 변수 표현식 (객체의 변수 표현식)
@{}: URL링크 표현식
#{}: 메세지 표현식
#객체: 내장 객체
~{}: UI조각	//생략 가능
||: 리터럴 치환

10. 조각 정의
	th:fragment="조각명"
	
11. 조각 참조
	th:insert	현재 태그에 정의된 조각을 컨텐츠로 삽입
	th:replace	현재 태그를 교체
	th:include	현재 태그의 컨텐츠에 조각의 컨텐츠를 삽입(비권장)

12. 조각 참조는 조각 표현식으로
~{templatename :: selector}

templatename: /templates 폴더 아래 경로명을 포함한 view 이름
selector(선택자):	templatename파일 내의 선택자 참조
				templatename이 없으면 현재 파일 내에서 참조
selector(선택자)의 종류
	1. th:fragment="조각명" or th:ref="조각명"
	2. 태그명
	3. .클래스명
	4. #아이디값
	/: 직계
	//: 자손
	x[@z="v"]: z가 v인 x엘리먼트
	x[@z1="v1" and @z2="v2"]: z1이 v1이고 z2가 v2인 x엘리먼트
	
13. 조각 참조시 파라미터 의미
	~{}(빈 조각): 렌더링하지 않음
	_(no-operation): 참조할 조각의 디폴트값을 사용(기본 컨텐츠)
	
#.
queryForObject: 레코드1에 쿼리1
ctrl+shift+T: 테스트 파일 생성 단축키
				
